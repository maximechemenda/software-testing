{"version":3,"names":["mongoose","require","OrderSchema","Schema","type","String","enum","default","required","description","user","Types","ObjectId","ref","Order","model","module","exports"],"sources":["order.js"],"sourcesContent":["// @/order.js\nconst mongoose = require(\"mongoose\");\n\nconst OrderSchema = new mongoose.Schema({\n  type: {\n    type: String,\n    enum : ['Box1','Box2'],\n    default: 'Box1',\n    required: false,\n  },\n  description: {\n    type: String,\n    required: false,\n  },\n\n  // Note: We intentionally let this loosely (not required) for DB testing purposes\n  // (0-N relationship).\n  // Under a normal working environment, this should be mandatory (1-N relationship).\n  user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' }\n});\n\nconst Order = mongoose.model(\"Order\", OrderSchema);\n\nmodule.exports = { Order };"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACtCC,IAAI,EAAE;IACJA,IAAI,EAAEC,MAAM;IACZC,IAAI,EAAG,CAAC,MAAM,EAAC,MAAM,CAAC;IACtBC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDC,WAAW,EAAE;IACXL,IAAI,EAAEC,MAAM;IACZG,QAAQ,EAAE;EACZ,CAAC;EAED;EACA;EACA;EACAE,IAAI,EAAE;IAAEN,IAAI,EAAEJ,QAAQ,CAACG,MAAM,CAACQ,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAO;AAC5D,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGd,QAAQ,CAACe,KAAK,CAAC,OAAO,EAAEb,WAAW,CAAC;AAElDc,MAAM,CAACC,OAAO,GAAG;EAAEH;AAAM,CAAC"}