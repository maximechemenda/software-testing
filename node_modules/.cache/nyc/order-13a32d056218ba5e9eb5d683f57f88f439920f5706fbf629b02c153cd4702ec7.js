function cov_z4x7huvwk(){var path="/Users/maximechemenda/Desktop/st-coursework/models/order.js";var hash="8bb4de69df3fb45a9f97a847aa1e638b58c32b1f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/maximechemenda/Desktop/st-coursework/models/order.js",statementMap:{"0":{start:{line:2,column:17},end:{line:2,column:36}},"1":{start:{line:3,column:20},end:{line:21,column:2}},"2":{start:{line:22,column:14},end:{line:22,column:50}},"3":{start:{line:23,column:0},end:{line:25,column:2}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{},b:{},inputSourceMap:{version:3,names:["mongoose","require","OrderSchema","Schema","type","String","enum","default","required","description","user","Types","ObjectId","ref","Order","model","module","exports"],sources:["order.js"],sourcesContent:["// @/order.js\nconst mongoose = require(\"mongoose\");\n\nconst OrderSchema = new mongoose.Schema({\n  type: {\n    type: String,\n    enum : ['Box1','Box2'],\n    default: 'Box1',\n    required: false,\n  },\n  description: {\n    type: String,\n    required: false,\n  },\n\n  // Note: We intentionally let this loosely (not required) for DB testing purposes\n  // (0-N relationship).\n  // Under a normal working environment, this should be mandatory (1-N relationship).\n  user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' }\n});\n\nconst Order = mongoose.model(\"Order\", OrderSchema);\n\nmodule.exports = { Order };"],mappings:"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACtCC,IAAI,EAAE;IACJA,IAAI,EAAEC,MAAM;IACZC,IAAI,EAAG,CAAC,MAAM,EAAC,MAAM,CAAC;IACtBC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDC,WAAW,EAAE;IACXL,IAAI,EAAEC,MAAM;IACZG,QAAQ,EAAE;EACZ,CAAC;EAED;EACA;EACA;EACAE,IAAI,EAAE;IAAEN,IAAI,EAAEJ,QAAQ,CAACG,MAAM,CAACQ,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAO;AAC5D,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGd,QAAQ,CAACe,KAAK,CAAC,OAAO,EAAEb,WAAW,CAAC;AAElDc,MAAM,CAACC,OAAO,GAAG;EAAEH;AAAM,CAAC"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8bb4de69df3fb45a9f97a847aa1e638b58c32b1f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_z4x7huvwk=function(){return actualCoverage;};}return actualCoverage;}cov_z4x7huvwk();// @/order.js
const mongoose=(cov_z4x7huvwk().s[0]++,require("mongoose"));const OrderSchema=(cov_z4x7huvwk().s[1]++,new mongoose.Schema({type:{type:String,enum:['Box1','Box2'],default:'Box1',required:false},description:{type:String,required:false},// Note: We intentionally let this loosely (not required) for DB testing purposes
// (0-N relationship).
// Under a normal working environment, this should be mandatory (1-N relationship).
user:{type:mongoose.Schema.Types.ObjectId,ref:'User'}}));const Order=(cov_z4x7huvwk().s[2]++,mongoose.model("Order",OrderSchema));cov_z4x7huvwk().s[3]++;module.exports={Order};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJPcmRlclNjaGVtYSIsIlNjaGVtYSIsInR5cGUiLCJTdHJpbmciLCJlbnVtIiwiZGVmYXVsdCIsInJlcXVpcmVkIiwiZGVzY3JpcHRpb24iLCJ1c2VyIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsIk9yZGVyIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsib3JkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQC9vcmRlci5qc1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5cbmNvbnN0IE9yZGVyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIHR5cGU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZW51bSA6IFsnQm94MScsJ0JveDInXSxcbiAgICBkZWZhdWx0OiAnQm94MScsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICB9LFxuICBkZXNjcmlwdGlvbjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gIH0sXG5cbiAgLy8gTm90ZTogV2UgaW50ZW50aW9uYWxseSBsZXQgdGhpcyBsb29zZWx5IChub3QgcmVxdWlyZWQpIGZvciBEQiB0ZXN0aW5nIHB1cnBvc2VzXG4gIC8vICgwLU4gcmVsYXRpb25zaGlwKS5cbiAgLy8gVW5kZXIgYSBub3JtYWwgd29ya2luZyBlbnZpcm9ubWVudCwgdGhpcyBzaG91bGQgYmUgbWFuZGF0b3J5ICgxLU4gcmVsYXRpb25zaGlwKS5cbiAgdXNlcjogeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1VzZXInIH1cbn0pO1xuXG5jb25zdCBPcmRlciA9IG1vbmdvb3NlLm1vZGVsKFwiT3JkZXJcIiwgT3JkZXJTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgT3JkZXIgfTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLE1BQU1DLFdBQVcsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQU0sQ0FBQztFQUN0Q0MsSUFBSSxFQUFFO0lBQ0pBLElBQUksRUFBRUMsTUFBTTtJQUNaQyxJQUFJLEVBQUcsQ0FBQyxNQUFNLEVBQUMsTUFBTSxDQUFDO0lBQ3RCQyxPQUFPLEVBQUUsTUFBTTtJQUNmQyxRQUFRLEVBQUU7RUFDWixDQUFDO0VBQ0RDLFdBQVcsRUFBRTtJQUNYTCxJQUFJLEVBQUVDLE1BQU07SUFDWkcsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUVEO0VBQ0E7RUFDQTtFQUNBRSxJQUFJLEVBQUU7SUFBRU4sSUFBSSxFQUFFSixRQUFRLENBQUNHLE1BQU0sQ0FBQ1EsS0FBSyxDQUFDQyxRQUFRO0lBQUVDLEdBQUcsRUFBRTtFQUFPO0FBQzVELENBQUMsQ0FBQztBQUVGLE1BQU1DLEtBQUssR0FBR2QsUUFBUSxDQUFDZSxLQUFLLENBQUMsT0FBTyxFQUFFYixXQUFXLENBQUM7QUFFbERjLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQUVIO0FBQU0sQ0FBQyJ9
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Iml0RUFpQkU7QUFBQSx5RkFqQkY7QUFDQSxLQUFNQSxTQUFRLHlCQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDLEVBRXBDLEtBQU1DLFlBQVcseUJBQUcsR0FBSUYsU0FBUSxDQUFDRyxNQUFNLENBQUMsQ0FDdENDLElBQUksQ0FBRSxDQUNKQSxJQUFJLENBQUVDLE1BQU0sQ0FDWkMsSUFBSSxDQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUN0QkMsT0FBTyxDQUFFLE1BQU0sQ0FDZkMsUUFBUSxDQUFFLEtBQ1osQ0FBQyxDQUNEQyxXQUFXLENBQUUsQ0FDWEwsSUFBSSxDQUFFQyxNQUFNLENBQ1pHLFFBQVEsQ0FBRSxLQUNaLENBQUMsQ0FFRDtBQUNBO0FBQ0E7QUFDQUUsSUFBSSxDQUFFLENBQUVOLElBQUksQ0FBRUosUUFBUSxDQUFDRyxNQUFNLENBQUNRLEtBQUssQ0FBQ0MsUUFBUSxDQUFFQyxHQUFHLENBQUUsTUFBTyxDQUM1RCxDQUFDLENBQUMsRUFFRixLQUFNQyxNQUFLLHlCQUFHZCxRQUFRLENBQUNlLEtBQUssQ0FBQyxPQUFPLENBQUViLFdBQVcsQ0FBQyx5QkFFbERjLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHLENBQUVILEtBQU0sQ0FBQyIsIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIk9yZGVyU2NoZW1hIiwiU2NoZW1hIiwidHlwZSIsIlN0cmluZyIsImVudW0iLCJkZWZhdWx0IiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsInVzZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiT3JkZXIiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJvcmRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAL29yZGVyLmpzXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcblxuY29uc3QgT3JkZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgdHlwZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBlbnVtIDogWydCb3gxJywnQm94MiddLFxuICAgIGRlZmF1bHQ6ICdCb3gxJyxcbiAgICByZXF1aXJlZDogZmFsc2UsXG4gIH0sXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgfSxcblxuICAvLyBOb3RlOiBXZSBpbnRlbnRpb25hbGx5IGxldCB0aGlzIGxvb3NlbHkgKG5vdCByZXF1aXJlZCkgZm9yIERCIHRlc3RpbmcgcHVycG9zZXNcbiAgLy8gKDAtTiByZWxhdGlvbnNoaXApLlxuICAvLyBVbmRlciBhIG5vcm1hbCB3b3JraW5nIGVudmlyb25tZW50LCB0aGlzIHNob3VsZCBiZSBtYW5kYXRvcnkgKDEtTiByZWxhdGlvbnNoaXApLlxuICB1c2VyOiB7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCwgcmVmOiAnVXNlcicgfVxufSk7XG5cbmNvbnN0IE9yZGVyID0gbW9uZ29vc2UubW9kZWwoXCJPcmRlclwiLCBPcmRlclNjaGVtYSk7XG5cbm1vZHVsZS5leHBvcnRzID0geyBPcmRlciB9OyJdfQ==